=============================================================
						Question List
=============================================================

1: Given a number (200), compare it to four variables (E.G A,B,C,D) 
   and return true if they are all equal to the given number.
   Do this in the most efficient way, and if possible without if statements.

2: There is a chess board of dimension n X n. You are given with 2 squares on that board S(x1,y1) ;M(x2,y2). 
   S is a fixed point. M can move diagonally. it can move any number of steps or jumps in 1 move . 
   Find the minimum number of moves M needs to reach S
   
3: Find missing element in the A.P.

4: Given a list of integers of size n, write a method to 
   write all permutations the list; do this in O(1) space Hint: No recursion.
   
5: Given an array, find the first element that appears an even number of times.

6: Given a circular linked list. Find the longest sequence of numbers, where a 
   sequence starts with any number, for example 3, and ends when you see that number
   again,another 3. 
   Imagine the circular linked list 
   3 8 9 7 2 1 3 4 6 [3] same as first element .i.e three.
   The longest sequence would be 3 8 9 7 2 1 , the other candidate being 3 4 6 
   Finding for instance,starting at 8 and getting to the same 8 wouldn't count as a valid sequence.  
   
7: Given a 8 by 8 matrix, find all possible paths , moving one cell downwards or
   on cell to the right,(one cell per movement ) from cell 0,0 , to cell 7,7 
   
8: Find the first non-repeated element in an unsorted array

9: You have a BST and you need to assign an appropriate value to neighbor of 
   all nodes (Explained in below example) 
   Node Structure
   node {
        node leftChild,
        node rightChild,
        T data,
        node neighbor
   }
	A 
	/ \ 
	B C 
	/ \ \ 
	D E F 

	Based on above tree, 
	
	Node: Neighbor 
	A: NULL 
	B: C 
	D: E 
	E: F

10: Face to Face 
Q4) two arrays given to you. First array contains number s. Second array contains key values. 

We need to find smallest window in first array which covers all second array elements. 
e.g: 

Input= {6,7,1,3,2,4,5,2,3,1,2,5} 
Keys = {2,5,1} 

answer: from 9th index to 11th index is the smallest window.

11: stream of numbers coming, get 'n' min elements at any point of time

 
 
 
 